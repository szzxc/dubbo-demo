<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.fykj.dubbo.demo.provider">
    </context:component-scan>
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="hello-world-app"/>

    <!-- 使用multicast广播注册中心暴露服务地址 -->
    <!--<dubbo:registry address="multicast://224.5.6.7:1234"/>-->
    <dubbo:registry client="zkclient" address="zookeeper://192.168.0.58:2181" />
    <!--<dubbo:registry client="curator" address="zookeeper://192.168.0.58:2181"/>-->

    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880" dispatcher="all" threadpool="fixed" threads="100"/>

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="com.fykj.dubbo.demo.api.DemoService" ref="demoService" loadbalance="random" group="demo" version="1.0.0" token="true"/>
    <dubbo:service interface="com.fykj.dubbo.demo.api.ValidationService" ref="validationService" validation="true" token="123456"/>
    <dubbo:service interface="com.fykj.dubbo.demo.api.CallbackService" ref="callbackService" connections="1" callbacks="1000">
        <dubbo:method name="addListener">
            <dubbo:argument index="1" callback="true" />
            <!--也可以通过指定类型的方式-->
            <!--<dubbo:argument type="com.demo.CallbackListener" callback="true" />-->
        </dubbo:method>
    </dubbo:service>

    <!-- 和本地bean一样实现服务，也可以使用注解 -->
    <!--<bean id="demoService" class="com.fykj.dubbo.demo.provider.DemoServiceImpl"/>-->

    <!--也可以使用context:component-scan代替-->
    <!--<dubbo:annotation package="com.fykj.dubbo.demo.provider" />-->

</beans>

